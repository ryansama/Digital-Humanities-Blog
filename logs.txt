Log 1: Short snippet of ~150 words about a person or object in history of computing

Subject: Alan Turing

Alan Turing was a renowned mathematician, wartime code-breaker, inventor, and a man ahead of his time. His work form cornerstones of the digital age, and have earned him recognition as one of the fathers of computer science. In his time, Turing developed a concept that would shape our modern world: the Turing Machine. This was an idea for a machine that could be programmed, or instructed, to perform different tasks. The Turing Machine is considered as the basis of the modern theory of computation. However, it is more commonly known as the computer. A few years prior to WWII, Turing began to work for the British government's cryptography analysis department. Here, he played the crucial role of decrypting the messages from Enigma (a sophisticated German encryption machine) with his own device known as Colossus. This provided a wealth of information to the Allies, and was assessed to have shortened the war by two years.
----------------------------------------------------------------------
Log 2:

  Subject: write ~100 words giving your own perspective on a specific intersection between culture and code in the piece. The more focused, the better. Pick a specific moment that interests you in the article and write only about it. (I know the article is long and somewhat intricate, hence my suggestion to focus on something particular about it.) If you are having difficulty determining how culture and code intersect, then ask questions such as: what’s a moment when history, gender, context, race, power, management, labour, class, aesthetics, or popular assumption really matters when we talk about programming? With your ~100 words about “What Is Code?” be sure to include a entry title and date stamp.

The focus of this log will be "How does testing work?" under Paul Ford's "What is code?". Testing is essential for ensuring that a product, technology, or idea can function according to specification. I believe testing in computer programming heavily intersects with other practices in our cultures. In the automobile industry, we constantly test cars to determine if they can keep passengers safe in a collision. In architecture, we test buildings to determine their compatibility with the environment. In software engineering, we write and run tests to ensure that bugs are absent in the code and that it works as expected. The concept of testing has been in practice for centuries, and it has clearly been inherited by new media and the digital world. 
